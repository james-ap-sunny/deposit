version: '3.8'

services:
  # Application Service
  banking-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: banking-app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DB1_HOST=bank-db1
      - DB1_PORT=3306
      - DB1_NAME=bank_source
      - DB1_USER=bank_user
      - DB1_PASSWORD=secure_password123
      - DB2_HOST=bank-db2
      - DB2_PORT=3306
      - DB2_NAME=bank_dest
      - DB2_USER=bank_user
      - DB2_PASSWORD=secure_password123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET_KEY=your-jwt-secret-key-change-in-production
      - MAX_TRANSFER_AMOUNT=50000.00
      - DAILY_TRANSFER_LIMIT=100000.00
    depends_on:
      - bank-db1
      - bank-db2
      - redis
    networks:
      - banking-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # Source Database
  bank-db1:
    image: mysql:8.0
    container_name: bank-db1
    environment:
      MYSQL_ROOT_PASSWORD: root_password123
      MYSQL_DATABASE: bank_source
      MYSQL_USER: bank_user
      MYSQL_PASSWORD: secure_password123
    ports:
      - "3306:3306"
    volumes:
      - db1_data:/var/lib/mysql
      - ./sql/init_source.sql:/docker-entrypoint-initdb.d/init.sql
      - ./config/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
    networks:
      - banking-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Destination Database
  bank-db2:
    image: mysql:8.0
    container_name: bank-db2
    environment:
      MYSQL_ROOT_PASSWORD: root_password123
      MYSQL_DATABASE: bank_dest
      MYSQL_USER: bank_user
      MYSQL_PASSWORD: secure_password123
    ports:
      - "3307:3306"
    volumes:
      - db2_data:/var/lib/mysql
      - ./sql/init_dest.sql:/docker-entrypoint-initdb.d/init.sql
      - ./config/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
    networks:
      - banking-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: banking-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - banking-network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  db1_data:
  db2_data:
  redis_data:

networks:
  banking-network:
    driver: bridge